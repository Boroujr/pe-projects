@import "utilities.css";

/* buttons and icons and smaller reusable bits here */

button,
a {
  cursor: pointer;
  transition: 0.2s;
}

/*  */
.button {
  padding: 1em;
  color: var(--color);
  transition: 0.2s;
  /* z-index: 1; */
  position: relative;
  isolation: isolate;
}

.button:is(:hover, :focus-visible) {
  color: var(--highlight);
}

.button:active {
  background: var(--color);
}

.button::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  border-radius: 50%;
  transform: translateY(-50%);
  background: currentColor;
  transition: 0.2s;
  height: 3em;
  width: 3em;
  background: var(--highlight);
  z-index: -1;
  box-shadow: -1vmin 1vmin 2vmin rgba(0, 0, 0, 0.25);
}

.button:is(:hover, :focus-visible)::before {
  color: var(--highlight);
  background: var(--color-light);
  aspect-ratio: unset;
  width: 100%;
  border-radius: 3em;

  /* aspect-ratio: unset; */
}

/*  */
.button.outline {
  color: var(--color);
  padding: 0.5em 1em;
}

.button.outline:active {
  background: var(--highlight);
  color: var(--color);
}

.button.outline::before {
  background: unset;
  border: var(--line-width-thin) solid var(--highlight);
}

.button.outline:is(:hover, :focus-visible)::before {
  background: unset;
  border-color: var(--color);
}

/*  */

.button.bubble {
  background: var(--highlight);
  aspect-ratio: 1/1;
  border-radius: 50%;
  width: unset;
  padding: 1.5em;
  position: relative;

  display: grid;
  place-items: center;

  box-shadow: -1vmin 1vmin 2vmin rgba(0, 0, 0, 0.25);
}

.button.bubble:is(:hover, :focus-visible) {
  color: var(--highlight);
  background: var(--color-light);
  text-decoration: none;
}

.button.bubble:active {
  background: var(--color);
}
.button.bubble::before {
  display: none;
}

/*  */
.button.icon {
  background: var(--color);

  aspect-ratio: 1 / 1;
  border-radius: 50%;

  padding: 0.25em;
  position: relative;

  display: grid;
  place-items: center;
  max-width: 2rem;
  box-shadow: -1vmin 1vmin 2vmin rgba(0, 0, 0, 0.25);
}

.button.icon picture {
  aspect-ratio: 1 / 1;
  border-radius: 50%;
}

.button.icon picture img {
  object-fit: contain;
}

.button.icon:is(:hover, :focus-visible) {
}

.button.icon::before {
  display: none;
}

/* Text buttons and acnhors  */
:is(button, a).text {
  padding: 0.5em 1em;
  background: none;
  border: none;
  color: var(--color);
  --link-hover: var(--color-lighter);
  --link-active: var(--highlight-darker);

  position: relative;
}

:is(button, a).text:is(:hover, :focus-visible) {
  color: var(--link-hover) !important;
}

:is(button, a).text:active {
  color: var(--link-active) !important;
}

:is(button, a).text::before {
  --decoration-size: 0.5em;
  content: "";
  position: absolute;
  left: 50%;
  border-radius: 50%;
  transform: translateX(-50%);
  width: var(--decoration-size);
  height: var(--decoration-size);
  background: currentColor;
  transition: 0.2s;
  bottom: 0;
}
p .text::before {
  bottom: -2px;
}

:is(button, a).text:is(:hover, :focus-visible)::before {
  width: 100%;
  height: var(--line-width-thin);
}

:is(button, a).text:active::before {
  width: 1.5em;
  height: 1.5em;
  opacity: 0.75;
}

a:has(.external-link) {
  position: relative;
}
a:has(.external-link) span {
  z-index: 2;
}

.external-link {
  max-width: 15px;
  position: absolute;
  right: 25px;
  top: 20px;
  transition: 0.2s;
}

a:hover .external-link {
  transform: translate(5px, -5px) scale(1.4);
  z-index: 1;
}
